{"version":3,"file":"static/js/98.87946aa4.chunk.js","mappings":"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","sources":["components/Typewriter/index.jsx","components/Form/Form.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Typewriter = ({ text = \"\", delayBeforeStart = 0, charInterval = 50, onComplete }) => {\n  const [displayedText, setDisplayedText] = useState(\"\");\n  const startTimeout = useRef(null);\n  const intervalRef = useRef(null);\n\n  useEffect(() => {\n    startTimeout.current = setTimeout(() => {\n      let idx = 0;\n      intervalRef.current = setInterval(() => {\n        setDisplayedText((prev) => prev + text[idx]);\n        idx++;\n        if (idx >= text.length) {\n          clearInterval(intervalRef.current);\n          if (onComplete) onComplete();\n        }\n      }, charInterval);\n    }, delayBeforeStart);\n\n    return () => {\n      clearTimeout(startTimeout.current);\n      clearInterval(intervalRef.current);\n    };\n  }, [text, delayBeforeStart, charInterval, onComplete]);\n\n  return <p>{displayedText}</p>;\n};\n\nexport default Typewriter; ","import React, { useState, useEffect } from \"react\";\nimport \"./Form.css\";\nimport Typewriter from \"../Typewriter\";\n\nconst totalPrompts = 45;\n\nfunction SuccessMessage({ onHide }) {\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      window.location.reload();\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [onHide]);\n\n  return (\n    <div className=\"success-message\">[ Your submission was successful ]</div>\n  );\n}\n\nfunction Form() {\n  const [step, setStep] = useState(1);\n  const [images, setImages] = useState(Array(totalPrompts).fill(null));\n  const [submitted, setSubmitted] = useState(false);\n  const [typedStep1Count, setTypedStep1Count] = useState(0);\n  const [typedStep3Count, setTypedStep3Count] = useState(0);\n  const CHAR_INTERVAL = 50;\n  const PARAGRAPH_DELAY = 500;\n\n  const STEP1_ITEMS = [\n    { prefix: \"[0]\", text: \"On this page, you can upload your images and fill out a short form.\" },\n    { prefix: \"[0.1]\", text: \"The images you share will be used to generate a sequence of AI-created visuals, guided by the prompts listed in the [text] section. Your photographs will help shape a visual journey—from before life to afterlife.\" },\n    { prefix: \"[0.2]\", text: \"Submit personal images already captured in everyday life. The images should form a coherent set through a recurring object, shape, or motif, a visual pattern, or a consistent photographic style—the connection can be thematic or aesthetic, but it must emerge naturally across the collection. For example: meals photographed across different days, views from the same window in changing light, or street scenes showing subtle variations over time.\" },\n    { prefix: \"[0.3]\", text: \"Do not take new photos just for this project. Send images that naturally reflect how you photograph your surroundings.\" },\n  ];\n\n  const STEP3_ITEMS = [\n    { prefix: \"[2]\", text: \"Fill any information you feel comfortable sharing. Fields marked with * are required, and question 2.4 is highly encouraged.\" },\n    { prefix: \"[2.5]\", text: \"Would you like to receive $1 for participating?\" },\n    { prefix: \"[2.6]\", text: \"Do you agree to your images being used to train AI?\" },\n    { prefix: \"[2.7]\", text: \"Do you agree to your images potentially shown publicly?\" },\n  ];\n\n  useEffect(() => {\n    if (step === 1) setTypedStep1Count(0);\n    if (step === 3) setTypedStep3Count(0);\n  }, [step]);\n\n  const handleImageUpload = (event, index) => {\n    const file = event.target.files[0];\n    if (file) {\n      const newImages = [...images];\n      newImages[index] = URL.createObjectURL(file);\n      setImages(newImages);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n\n  return (\n    <div className=\"form-container\">\n      {submitted ? (\n        <SuccessMessage onHide={() => setSubmitted(false)} />\n      ) : (\n        <>\n          {/* ТЕКСТОВЫЙ СТОЛБЕЦ */}\n          <div className={`form-text-view ${step > 1 ? \"dimmed\" : \"\"}`}>\n            <ul className=\"form-text-list\">\n              {STEP1_ITEMS.map((item, idx) => (\n                <li key={idx} className=\"form-text-list-element\">\n                  <span>{item.prefix}</span>\n                  {idx < typedStep1Count ? (\n                    <p>{item.text}</p>\n                  ) : idx === typedStep1Count ? (\n                    <Typewriter\n                      text={item.text}\n                      charInterval={CHAR_INTERVAL}\n                      onComplete={() => setTypedStep1Count((c) => c + 1)}\n                    />\n                  ) : null}\n                </li>\n              ))}\n            </ul>\n            {step === 1 && typedStep1Count >= STEP1_ITEMS.length && (\n              <button\n                className=\"form-text-next-button\"\n                onClick={() => setStep(2)}\n              >\n                [Next]\n              </button>\n            )}\n          </div>\n\n          {/* СЕТКА ДЛЯ ЗАГРУЗКИ ИЗОБРАЖЕНИЙ */}\n          {step > 1 && (\n            <div className={`form-upload-view ${step === 3 ? \"dimmed\" : \"\"}`}>\n              <div className=\"form-image-grid\">\n                {Array.from({ length: totalPrompts }, (_, i) => (\n                  <div key={i} className=\"form-grid-cell\">\n                    {images[i] ? (\n                      <img loading=\"lazy\" src={images[i]} alt={`Upload ${i + 1}`} />\n                    ) : (\n                      <label>\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          onChange={(e) => handleImageUpload(e, i)}\n                          style={{ display: \"none\" }}\n                        />\n                      </label>\n                    )}\n                  </div>\n                ))}\n              </div>\n              {step === 2 && (\n                <button\n                  className=\"form-upload-button\"\n                  onClick={() => setStep(3)}\n                  disabled={!images.some((img) => img !== null)}\n                >\n                  [Upload]\n                </button>\n              )}\n            </div>\n          )}\n\n          {/* ФОРМА ДЛЯ ИМЕНИ И ДАННЫХ */}\n          {step === 3 && (\n            <div className=\"form-data-view\">\n              <form className=\"form-data-view-form\" onSubmit={handleSubmit}>\n                {STEP3_ITEMS.map((item, idx) => {\n                  const isComplete = idx < typedStep3Count;\n                  const isTyping = idx === typedStep3Count;\n                  return (\n                    <label key={idx}>\n                      {item.prefix}\n                      {isComplete ? (\n                        <p>{item.text}</p>\n                      ) : isTyping ? (\n                        <Typewriter\n                          text={item.text}\n                          charInterval={CHAR_INTERVAL}\n                          onComplete={() => setTypedStep3Count((c) => c + 1)}\n                        />\n                      ) : null}\n                      {item.prefix === \"[2.5]\" && (\n                        <div className=\"radio-group\">\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"payment\"\n                              value=\"yes\"\n                              required\n                            />\n                            [YES], here's my PayPal\n                          </label>\n                          <input\n                            className=\"paypal\"\n                            type=\"text\"\n                            placeholder=\"Enter PayPal email\"\n                          />\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"payment\"\n                              value=\"no\"\n                              required\n                            />\n                            [NO], payment needed. I participate voluntarily.\n                          </label>\n                        </div>\n                      )}\n                      {item.prefix === \"[2.6]\" && (\n                        <div className=\"radio-group\">\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"train_ai\"\n                              value=\"yes\"\n                              required\n                            />\n                            Yes\n                          </label>\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"train_ai\"\n                              value=\"no\"\n                              required\n                            />\n                            No\n                          </label>\n                        </div>\n                      )}\n                      {item.prefix === \"[2.7]\" && (\n                        <div className=\"radio-group\">\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"publicly\"\n                              value=\"yes\"\n                              required\n                            />\n                            Yes\n                          </label>\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"publicly\"\n                              value=\"no\"\n                            />\n                            No\n                          </label>\n                        </div>\n                      )}\n                    </label>\n                  );\n                })}\n                <button type=\"submit\" className=\"form-data-view-submit\">\n                  [Complite]\n                </button>\n              </form>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Form;\n"],"names":["_ref","text","delayBeforeStart","charInterval","onComplete","displayedText","setDisplayedText","useState","startTimeout","useRef","intervalRef","useEffect","current","setTimeout","idx","setInterval","prev","length","clearInterval","clearTimeout","_jsx","children","SuccessMessage","onHide","React","timer","window","location","reload","className","step","setStep","images","setImages","Array","fill","submitted","setSubmitted","typedStep1Count","setTypedStep1Count","typedStep3Count","setTypedStep3Count","STEP1_ITEMS","prefix","_jsxs","_Fragment","map","item","Typewriter","c","onClick","from","_","i","loading","src","alt","type","accept","onChange","e","handleImageUpload","event","index","file","target","files","newImages","URL","createObjectURL","style","display","disabled","some","img","onSubmit","preventDefault","isComplete","isTyping","name","value","required","placeholder"],"sourceRoot":""}