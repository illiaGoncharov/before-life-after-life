{"version":3,"file":"static/js/42.997caa32.chunk.js","mappings":"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","sources":["components/Text/Text.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Text.css\";\nimport { prompts } from \"../../data/prompts\";\n\n// Define a direct mapping from prompt text to audio number\nconst AUDIO_MAPPING = {\n  \"before life\": 1,\n  \"home\": 2,\n  \"family at home\": 3,\n  \"birth\": 4,\n  \"unintended child\": 5,\n  \"puberty\": 6,\n  \"bullied teen\": 7,\n  \"love\": 8,\n  \"love between men\": 9,\n  \"love between women\": 10,\n  \"sex\": 11,\n  \"unsafe sex\": 12,\n  \"healthy person\": 13,\n  \"sick person\": 14,\n  \"person with mental health condition\": 15,\n  \"person with substance use disorder\": 16,\n  \"immigrant\": 17,\n  \"apolitical person\": 18,\n  \"propaganda\": 19,\n  \"people at protest\": 20,\n  \"rich politician\": 21,\n  \"poor politician\": 22,\n  \"poor person\": 23,\n  \"homeless person\": 24,\n  \"unemployed person\": 25,\n  \"influencer\": 26,\n  \"artist\": 27,\n  \"office worker\": 28,\n  \"city\": 29,\n  \"city celebration\": 30,\n  \"city at war\": 31,\n  \"person at war\": 32,\n  \"woman at war\": 33,\n  \"women military parade\": 34,\n  \"tampon in blood\": 35,\n  \"bullet in blood\": 36,\n  \"elderly person\": 37,\n  \"dying person\": 38,\n  \"euthanasia\": 39,\n  \"dying pet\": 40,\n  \"death\": 41,\n  \"funeral\": 42,\n  \"cemetery\": 43,\n  \"religion\": 44,\n  \"afterlife\": 45\n};\n\nfunction Text() {\n  const [offset, setOffset] = useState(window.innerHeight);\n  const SCROLL_SPEED = 0.3;\n  const [currentPromptInCenter, setCurrentPromptInCenter] = useState(null);\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [audioDisabled, setAudioDisabled] = useState(false);\n  const audioRef = useRef(null);\n  const videoRef = useRef(null);\n  const animationRef = useRef(null);\n  const textWrapperRef = useRef(null);\n  const audioErrorCount = useRef(0);\n\n  // Start scrolling immediately after brief loading\n  useEffect(() => {\n    const fastStartTimer = setTimeout(() => {\n      setIsLoading(false);\n      setIsInitialized(true);\n    }, 2000);\n    \n    return () => clearTimeout(fastStartTimer);\n  }, []);\n\n  // Инициализация камеры\n  useEffect(() => {\n    // Настройки камеры - пробуем взять размер окна\n    // Возможно камера выключается из-за того, что мы просим слишком много\n    // Давай попробуем более щадящие настройки\n    const constraints = {\n      video: { \n        facingMode: 'user',\n        // Просим HD разрешение, не больше\n        width: { ideal: 1280 },\n        height: { ideal: 720 }\n      }\n    };\n\n    // Функция для запуска камеры\n    // Выношу в отдельную функцию, чтобы можно было перезапускать\n    const startCamera = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        \n        if (videoRef.current) {\n          // Подключаем поток к видео элементу\n          videoRef.current.srcObject = stream;\n          \n          // Важно! Нужно дождаться, пока видео будет готово к воспроизведению\n          videoRef.current.onloadedmetadata = () => {\n            // Теперь можно запускать воспроизведение\n            videoRef.current.play()\n              .catch(e => console.error('Ошибка воспроизведения:', e));\n          };\n\n          // Если видео остановилось, пытаемся перезапустить\n          videoRef.current.onpause = () => {\n            console.log('Видео на паузе, перезапускаем...');\n            videoRef.current.play()\n              .catch(e => console.error('Ошибка перезапуска:', e));\n          };\n        }\n      } catch (err) {\n        console.error('Ошибка запуска камеры:', err);\n      }\n    };\n\n    // Запускаем камеру\n    startCamera();\n\n    // Следим за видимостью страницы\n    // Возможно камера выключается, когда страница становится неактивной\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        console.log('Страница стала видимой, перезапускаем камеру...');\n        startCamera();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    // При размонтировании компонента\n    return () => {\n      // Убираем слежение за видимостью\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      \n      // Останавливаем все треки камеры\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => {\n          console.log('Останавливаем трек камеры:', track.label);\n          track.stop();\n        });\n      }\n    };\n  }, []);\n\n  // Initialize audio\n  useEffect(() => {\n    try {\n      audioRef.current = new Audio();\n      \n      const handleAudioEnded = () => {\n        setIsAudioPlaying(false);\n      };\n      \n      audioRef.current.addEventListener('ended', handleAudioEnded);\n      \n      const handleAudioError = (e) => {\n        console.error(\"Audio error:\", e);\n        audioErrorCount.current += 1;\n        \n        if (audioErrorCount.current >= 3) {\n          setAudioDisabled(true);\n        }\n        \n        setIsAudioPlaying(false);\n      };\n      \n      audioRef.current.addEventListener('error', handleAudioError);\n      \n      return () => {\n        if (audioRef.current) {\n          audioRef.current.pause();\n          audioRef.current.removeEventListener('ended', handleAudioEnded);\n          audioRef.current.removeEventListener('error', handleAudioError);\n        }\n      };\n    } catch (error) {\n      console.error(\"Audio initialization error:\", error);\n      setAudioDisabled(true);\n      return () => {};\n    }\n  }, []);\n\n  // Set up animation and center detection\n  useEffect(() => {\n    if (!isInitialized) return;\n    \n    const checkCenterPrompt = () => {\n      if (isAudioPlaying || audioDisabled) return;\n\n      try {\n        const windowCenter = window.innerHeight / 2;\n        const textSteps = document.querySelectorAll('.text-step');\n        if (!textSteps || !textSteps.length) return;\n        \n        let closestToCenter = null;\n        let smallestDistance = Infinity;\n        \n        textSteps.forEach((step) => {\n          try {\n            const rect = step.getBoundingClientRect();\n            const stepCenter = rect.top + rect.height / 2;\n            const distance = Math.abs(stepCenter - windowCenter);\n            \n            if (distance < smallestDistance) {\n              smallestDistance = distance;\n              closestToCenter = step;\n            }\n          } catch (error) {\n            // Silent catch for any getBoundingClientRect errors\n          }\n        });\n        \n        if (closestToCenter && smallestDistance < 50) {\n          const promptInCenter = closestToCenter.textContent;\n          \n          if (promptInCenter && promptInCenter !== currentPromptInCenter) {\n            setCurrentPromptInCenter(promptInCenter);\n            \n            if (!audioDisabled) {\n              const audioNumber = AUDIO_MAPPING[promptInCenter];\n              if (audioNumber) {\n                playAudio(audioNumber);\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in checkCenterPrompt:\", error);\n      }\n    };\n    \n    const animate = () => {\n      try {\n        setOffset((prev) => prev - SCROLL_SPEED);\n        \n        if (!audioDisabled) {\n          checkCenterPrompt();\n        }\n        \n        animationRef.current = requestAnimationFrame(animate);\n      } catch (error) {\n        console.error(\"Animation error:\", error);\n        animationRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    animationRef.current = requestAnimationFrame(animate);\n    \n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [currentPromptInCenter, isAudioPlaying, isInitialized, audioDisabled]);\n\n  const playAudio = (audioNumber) => {\n    if (!audioRef.current || audioDisabled) return;\n\n    try {\n      setIsAudioPlaying(true);\n\n      const audioSrc = `${process.env.PUBLIC_URL}/audio/audio_${\n        String(audioNumber).padStart(2, \"0\")\n      }.mp3`;\n\n      if (!audioRef.current.paused) audioRef.current.pause();\n      audioRef.current.src = audioSrc;\n      \n      const safetyTimeout = setTimeout(() => {\n        setIsAudioPlaying(false);\n      }, 10000);\n      \n      audioRef.current.play()\n        .then(() => {\n          clearTimeout(safetyTimeout);\n        })\n        .catch((error) => {\n          console.error(\"Audio playback error:\", error);\n          clearTimeout(safetyTimeout);\n          setIsAudioPlaying(false);\n          \n          audioErrorCount.current += 1;\n          if (audioErrorCount.current >= 3) {\n            setAudioDisabled(true);\n          }\n        });\n    } catch (error) {\n      console.error(\"Error playing audio:\", error);\n      setIsAudioPlaying(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"text-container loading\">\n        <div className=\"loading-message\">Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-container\">\n      <video\n        ref={videoRef}\n        autoPlay\n        playsInline\n        muted\n        className=\"video-bg\"\n      />\n\n      <div\n        ref={textWrapperRef}\n        className=\"text-wrapper\"\n        style={{ transform: `translateY(${-offset}px)` }}\n      >\n        {prompts.map((prompt, idx) => (\n          <div \n            key={idx} \n            className=\"text-step\"\n          >\n            {prompt}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Text;\n"],"names":["AUDIO_MAPPING","offset","setOffset","useState","window","innerHeight","currentPromptInCenter","setCurrentPromptInCenter","isAudioPlaying","setIsAudioPlaying","isInitialized","setIsInitialized","isLoading","setIsLoading","audioDisabled","setAudioDisabled","audioRef","useRef","videoRef","animationRef","textWrapperRef","audioErrorCount","useEffect","fastStartTimer","setTimeout","clearTimeout","constraints","video","facingMode","width","ideal","height","startCamera","async","stream","navigator","mediaDevices","getUserMedia","current","srcObject","onloadedmetadata","play","catch","e","console","error","onpause","log","err","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","getTracks","forEach","track","label","stop","Audio","handleAudioEnded","handleAudioError","pause","animate","prev","checkCenterPrompt","windowCenter","textSteps","querySelectorAll","length","closestToCenter","smallestDistance","Infinity","step","rect","getBoundingClientRect","stepCenter","top","distance","Math","abs","promptInCenter","textContent","audioNumber","playAudio","requestAnimationFrame","cancelAnimationFrame","audioSrc","String","padStart","paused","src","safetyTimeout","then","_jsx","className","children","_jsxs","ref","autoPlay","playsInline","muted","style","transform","prompts","map","prompt","idx"],"sourceRoot":""}