{"version":3,"file":"static/js/884.cb78a3ec.chunk.js","mappings":"iLAGA,MACMA,EADe,CAAC,SAAU,OAAQ,QAAS,SAAU,QAC/BC,SAASC,GACnCC,MAAMC,KAAK,CAAEC,OAAQ,KAAM,CAACC,EAAGC,KAC7B,MAAMC,EAAW,GAAGN,KAAUO,OAAOF,EAAI,GAAGG,SAAS,EAAG,WACxD,MAAO,kCAAoCR,KAAUM,GAAU,MAI7DG,EAAY,IAEH,SAASC,EAAOC,GAAmB,IAAlB,YAAEC,GAAaD,EAC7C,MAAOE,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAC1CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,IAAIG,MAErDC,EAAAA,EAAAA,YAAU,KACRrB,EAAOsB,SAASC,IACd,MAAMC,EAAM,IAAIC,MAChBD,EAAID,IAAMA,EACVC,EAAIE,OAAS,KACX,MAAMC,EAAQC,KAAKC,SAAWlB,EAC9BmB,YAAW,KACTd,GAAiBe,GAAS,IAAIA,EAAMR,IAAK,GACxCI,EAAM,EAEXH,EAAIQ,QAAWC,IACbC,QAAQD,MAAM,wBAAwBV,IAAOU,EAAM,CACpD,GACD,GACD,KAGHZ,EAAAA,EAAAA,YAAU,KACJH,EAAaiB,OAASnC,EAAOK,QAAUS,GACzCA,GACF,GACC,CAACI,EAAcJ,IAOlB,OACEsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,SACrBtC,EAAOuC,KAAI,CAAChB,EAAKiB,KAChBJ,EAAAA,EAAAA,KAAA,OAEEC,UAAW,oBACTnB,EAAauB,IAAIlB,GAAO,SAAW,IAErCmB,aAAcA,IAbEnB,KACxBJ,GAAiBY,GAAS,IAAIX,IAAIW,GAAMY,IAAIpB,IAAK,EAYrBqB,CAAiBrB,GAAMe,UAE3CF,EAAAA,EAAAA,KAAA,OACEb,IAAKA,EACLsB,IAAK,SAASL,EAAQ,IACtBM,QAAQ,OACRT,UAAWtB,EAAagC,SAASxB,GAAO,SAAW,MAVhDiB,QAiBjB,C","sources":["components/Gallery/Gallery.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Gallery.css\";\n\nconst imageFolders = [\"andrey\", \"anna\", \"clara\", \"dexter\", \"jeff\"];\nconst images = imageFolders.flatMap((folder) =>\n  Array.from({ length: 45 }, (_, i) => {\n    const fileName = `${folder}_${String(i + 1).padStart(2, \"0\")}.png`;\n    return `${process.env.PUBLIC_URL}/images/${folder}/${fileName}`;\n  })\n);\n\nconst MAX_DELAY = 500; // Максимальная задержка появления изображения в мс (скорректировано для ускорения загрузки)\n\nexport default function Gallery({ onAllHidden }) {\n  const [loadedImages, setLoadedImages] = useState([]);\n  const [hiddenImages, setHiddenImages] = useState(new Set()); // Используем Set для хранения скрытых изображений\n\n  useEffect(() => {\n    images.forEach((src) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => {\n        const delay = Math.random() * MAX_DELAY;\n        setTimeout(() => {\n          setLoadedImages((prev) => [...prev, src]);\n        }, delay);\n      };\n      img.onerror = (error) => {\n        console.error(`Error loading image: ${src}`, error);\n      };\n    });\n  }, []);\n\n  // Если пользователь скрыл все изображения, переходим к следующему компоненту\n  useEffect(() => {\n    if (hiddenImages.size === images.length && onAllHidden) {\n      onAllHidden();\n    }\n  }, [hiddenImages, onAllHidden]);\n\n  // Функция для скрытия изображения при наведении\n  const handleMouseEnter = (src) => {\n    setHiddenImages((prev) => new Set(prev).add(src)); // Добавляем изображение в Set\n  };\n\n  return (\n    <div className=\"gallery-container\">\n      <div className=\"gallery\">\n        {images.map((src, index) => (\n          <div\n            key={index}\n            className={`image-container ${\n              hiddenImages.has(src) ? \"hidden\" : \"\"\n            }`} // Проверяем, скрыто ли изображение\n            onMouseEnter={() => handleMouseEnter(src)} // Обработчик наведения\n          >\n            <img\n              src={src}\n              alt={`Image ${index + 1}`}\n              loading=\"lazy\"\n              className={loadedImages.includes(src) ? \"loaded\" : \"\"}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":["images","flatMap","folder","Array","from","length","_","i","fileName","String","padStart","MAX_DELAY","Gallery","_ref","onAllHidden","loadedImages","setLoadedImages","useState","hiddenImages","setHiddenImages","Set","useEffect","forEach","src","img","Image","onload","delay","Math","random","setTimeout","prev","onerror","error","console","size","_jsx","className","children","map","index","has","onMouseEnter","add","handleMouseEnter","alt","loading","includes"],"sourceRoot":""}