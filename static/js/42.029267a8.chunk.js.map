{"version":3,"file":"static/js/42.029267a8.chunk.js","mappings":"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","sources":["components/Text/Text.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Text.css\";\nimport { prompts } from \"../../data/prompts\";\n\n// Define a direct mapping from prompt text to audio number\nconst AUDIO_MAPPING = {\n  \"before life\": 1,\n  \"home\": 2,\n  \"family at home\": 3,\n  \"birth\": 4,\n  \"unintended child\": 5,\n  \"puberty\": 6,\n  \"bullied teen\": 7,\n  \"love\": 8,\n  \"love between men\": 9,\n  \"love between women\": 10,\n  \"sex\": 11,\n  \"unsafe sex\": 12,\n  \"healthy person\": 13,\n  \"sick person\": 14,\n  \"person with mental health condition\": 15,\n  \"person with substance use disorder\": 16,\n  \"immigrant\": 17,\n  \"apolitical person\": 18,\n  \"propaganda\": 19,\n  \"people at protest\": 20,\n  \"rich politician\": 21,\n  \"poor politician\": 22,\n  \"poor person\": 23,\n  \"homeless person\": 24,\n  \"unemployed person\": 25,\n  \"influencer\": 26,\n  \"artist\": 27,\n  \"office worker\": 28,\n  \"city\": 29,\n  \"city celebration\": 30,\n  \"city at war\": 31,\n  \"person at war\": 32,\n  \"woman at war\": 33,\n  \"women military parade\": 34,\n  \"tampon in blood\": 35,\n  \"bullet in blood\": 36,\n  \"elderly person\": 37,\n  \"dying person\": 38,\n  \"euthanasia\": 39,\n  \"dying pet\": 40,\n  \"death\": 41,\n  \"funeral\": 42,\n  \"cemetery\": 43,\n  \"religion\": 44,\n  \"afterlife\": 45\n};\n\nfunction Text() {\n  const [offset, setOffset] = useState(window.innerHeight);\n  const SCROLL_SPEED = 0.3;\n  const [currentPromptInCenter, setCurrentPromptInCenter] = useState(null);\n  const [cameraError, setCameraError] = useState(false);\n  const [isAudioPlaying, setIsAudioPlaying] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [audioDisabled, setAudioDisabled] = useState(false);\n  const audioRef = useRef(null);\n  const videoRef = useRef(null);\n  const animationRef = useRef(null);\n  const textWrapperRef = useRef(null);\n  const audioErrorCount = useRef(0);\n\n  // Start scrolling immediately after brief loading\n  useEffect(() => {\n    // Set a fast timeout to start showing content even if other things fail\n    const fastStartTimer = setTimeout(() => {\n      setIsLoading(false);\n      setIsInitialized(true);\n    }, 2000); // Show content after 2 seconds max\n    \n    return () => clearTimeout(fastStartTimer);\n  }, []);\n\n  // Initialize camera\n  useEffect(() => {\n    try {\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then((stream) => {\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n        })\n        .catch((error) => {\n          console.error(\"Camera error:\", error);\n          setCameraError(true);\n        });\n    } catch (error) {\n      console.error(\"Camera initialization error:\", error);\n      setCameraError(true);\n    }\n  }, []);\n  \n  // Initialize audio (separately from camera)\n  useEffect(() => {\n    try {\n      audioRef.current = new Audio();\n      \n      // Add audio ended event to track when audio finishes\n      const handleAudioEnded = () => {\n        setIsAudioPlaying(false);\n      };\n      \n      audioRef.current.addEventListener('ended', handleAudioEnded);\n      \n      // Add error handler for audio\n      const handleAudioError = (e) => {\n        console.error(\"Audio error:\", e);\n        audioErrorCount.current += 1;\n        \n        // If multiple audio errors, disable audio altogether\n        if (audioErrorCount.current >= 3) {\n          console.warn(\"Too many audio errors, disabling audio\");\n          setAudioDisabled(true);\n        }\n        \n        setIsAudioPlaying(false);\n      };\n      \n      audioRef.current.addEventListener('error', handleAudioError);\n      \n      return () => {\n        if (audioRef.current) {\n          audioRef.current.pause();\n          audioRef.current.removeEventListener('ended', handleAudioEnded);\n          audioRef.current.removeEventListener('error', handleAudioError);\n        }\n      };\n    } catch (error) {\n      console.error(\"Audio initialization error:\", error);\n      setAudioDisabled(true);\n      return () => {};\n    }\n  }, []);\n\n  // Set up animation and center detection\n  useEffect(() => {\n    if (!isInitialized) return;\n    \n    // Function to detect which prompt is in center\n    const checkCenterPrompt = () => {\n      if (isAudioPlaying || audioDisabled) return;\n\n      try {\n        const windowCenter = window.innerHeight / 2;\n        \n        // Get all text-step elements and find which one is closest to center\n        const textSteps = document.querySelectorAll('.text-step');\n        if (!textSteps || !textSteps.length) return;\n        \n        let closestToCenter = null;\n        let smallestDistance = Infinity;\n        \n        textSteps.forEach((step) => {\n          try {\n            const rect = step.getBoundingClientRect();\n            const stepCenter = rect.top + rect.height / 2;\n            const distance = Math.abs(stepCenter - windowCenter);\n            \n            if (distance < smallestDistance) {\n              smallestDistance = distance;\n              closestToCenter = step;\n            }\n          } catch (error) {\n            // Silent catch for any getBoundingClientRect errors\n          }\n        });\n        \n        if (closestToCenter && smallestDistance < 50) {\n          const promptInCenter = closestToCenter.textContent;\n          \n          if (promptInCenter && promptInCenter !== currentPromptInCenter) {\n            setCurrentPromptInCenter(promptInCenter);\n            \n            // Only play audio if not disabled\n            if (!audioDisabled) {\n              const audioNumber = AUDIO_MAPPING[promptInCenter];\n              if (audioNumber) {\n                playAudio(audioNumber);\n              }\n            }\n          }\n        }\n      } catch (error) {\n        console.error(\"Error in checkCenterPrompt:\", error);\n      }\n    };\n    \n    // Animation function that scrolls continuously\n    const animate = () => {\n      try {\n        // Always scroll regardless of audio status in production\n        setOffset((prev) => prev - SCROLL_SPEED);\n        \n        if (!audioDisabled) {\n          checkCenterPrompt();\n        }\n        \n        animationRef.current = requestAnimationFrame(animate);\n      } catch (error) {\n        console.error(\"Animation error:\", error);\n        // Try to recover animation\n        animationRef.current = requestAnimationFrame(animate);\n      }\n    };\n    \n    animationRef.current = requestAnimationFrame(animate);\n    \n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [currentPromptInCenter, isAudioPlaying, isInitialized, audioDisabled]);\n\n  const playAudio = (audioNumber) => {\n    if (!audioRef.current || audioDisabled) return;\n\n    try {\n      setIsAudioPlaying(true);\n\n      const audioSrc = `${process.env.PUBLIC_URL}/audio/audio_${\n        String(audioNumber).padStart(2, \"0\")\n      }.mp3`;\n\n      if (!audioRef.current.paused) audioRef.current.pause();\n      audioRef.current.src = audioSrc;\n      \n      // Set a timeout to release isAudioPlaying in case of silent errors\n      const safetyTimeout = setTimeout(() => {\n        setIsAudioPlaying(false);\n      }, 10000); // 10 seconds max for any audio\n      \n      audioRef.current.play()\n        .then(() => {\n          // Audio started successfully\n          clearTimeout(safetyTimeout);\n        })\n        .catch((error) => {\n          console.error(\"Audio playback error:\", error);\n          clearTimeout(safetyTimeout);\n          setIsAudioPlaying(false);\n          \n          // Increment error count and possibly disable audio\n          audioErrorCount.current += 1;\n          if (audioErrorCount.current >= 3) {\n            console.warn(\"Too many audio errors, disabling audio\");\n            setAudioDisabled(true);\n          }\n        });\n    } catch (error) {\n      console.error(\"Error playing audio:\", error);\n      setIsAudioPlaying(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"text-container loading\">\n        <div className=\"loading-message\">Загрузка...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-container\">\n      {cameraError && (\n        <div className=\"camera-error\">\n          <span>Ошибка доступа к камере</span>\n        </div>\n      )}\n\n      <video\n        ref={videoRef}\n        autoPlay\n        playsInline\n        muted\n        className=\"video-bg\"\n      />\n\n      <div\n        ref={textWrapperRef}\n        className=\"text-wrapper\"\n        style={{ transform: `translateY(${-offset}px)` }}\n      >\n        {prompts.map((prompt, idx) => (\n          <div \n            key={idx} \n            className=\"text-step\"\n          >\n            {prompt}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Text;\n"],"names":["AUDIO_MAPPING","offset","setOffset","useState","window","innerHeight","currentPromptInCenter","setCurrentPromptInCenter","cameraError","setCameraError","isAudioPlaying","setIsAudioPlaying","isInitialized","setIsInitialized","isLoading","setIsLoading","audioDisabled","setAudioDisabled","audioRef","useRef","videoRef","animationRef","textWrapperRef","audioErrorCount","useEffect","fastStartTimer","setTimeout","clearTimeout","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","error","console","Audio","handleAudioEnded","addEventListener","handleAudioError","e","warn","pause","removeEventListener","animate","prev","checkCenterPrompt","windowCenter","textSteps","document","querySelectorAll","length","closestToCenter","smallestDistance","Infinity","forEach","step","rect","getBoundingClientRect","stepCenter","top","height","distance","Math","abs","promptInCenter","textContent","audioNumber","playAudio","requestAnimationFrame","cancelAnimationFrame","audioSrc","String","padStart","paused","src","safetyTimeout","play","_jsx","className","children","_jsxs","ref","autoPlay","playsInline","muted","style","transform","prompts","map","prompt","idx"],"sourceRoot":""}